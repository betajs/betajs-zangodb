/*!
betajs-zangodb - v0.0.6 - 2019-11-07
Copyright (c) Oliver Friedmann
Apache-2.0 Software License.
*/

(function(){var a=this.subScope();a.binding("module","global:BetaJS.Data.Databases.Zango"),a.binding("base","global:BetaJS"),a.binding("data","global:BetaJS.Data"),a.define("module:",function(){return{guid:"1f4fd098-7b39-4f33-8638-585484cbe503",version:"0.0.6",datetime:1573185825692}}),a.assumeVersion("base:version","~1.0.96"),a.assumeVersion("data:version","~1.0.41"),a.define("module:ZangoDatabaseTable",["data:Databases.DatabaseTable","base:Promise","base:Iterators.ArrayIterator","base:Tokens","base:Objs","base:Types"],function(a,b,c,d,e,f,g){var h=["weak"];return a.extend({scoped:g},{table:function(){return this.__table||(this.__table=this._database._getTable(this._table_name)),this.__table},primary_key:function(){return"_id"},_insertRow:function(a){return a[this.primary_key()]||(a[this.primary_key()]=d.generate_token()),b.funcCallback(this.table(),this.table().insert,a).mapSuccess(function(b){return a},this)},_removeRow:function(a){return b.funcCallback(this.table(),this.table().remove,a)},_updateRow:function(a,c){return b.funcCallback(this.table(),this.table().update,a,{$set:c}).mapSuccess(function(){return c})},_encode:function(a){return a=e.map(a,function(a){return a&&(f.is_object(a)||f.is_array(a))?this._encode(a):a},this),h.forEach(function(b){b in a&&(a[b+"_reserved"]=a[b],delete a[b])}),a},_decode:function(a){return a=e.map(a,function(a){return a&&(f.is_object(a)||f.is_array(a))?this._decode(a):a},this),h.forEach(function(b){b+"_reserved"in a&&(a[b]=a[b+"_reserved"],delete a[b+"_reserved"])}),a},_find:function(a,d){var e=this.table().find(a);return d=d||{},d.sort&&(e=e.sort(d.sort)),d.skip&&(e=e.skip(d.skip)),d.limit&&(e=e.limit(d.limit)),b.funcCallback(e,e.toArray).mapSuccess(function(a){return new c(a)},this).error(function(a){console.warn(a)})},ensureIndex:function(a){this.__table=null,this._database._ensureIndex(this._table_name,a)}})}),a.define("module:ZangoDatabase",["data:Databases.Database","base:Promise","module:ZangoDatabaseTable"],function(a,b,c,d){return a.extend({scoped:d},function(a){return{constructor:function(b,c){a.constructor.call(this),this._db=b,this._config=c||{},this._zangodb=null},destroy:function(){this._unbind(),a.destroy.call(this)},_unbind:function(){this._zangodb&&(this._zangodb.close(),this._zangodb=null)},_bind:function(){this._zangodb||(this._zangodb=new zango.Db(this._db,this._config))},_tableClass:function(){return c},_ensureIndex:function(a,b){this._config[a]=this._config[a]||[],this._config[a].push(b),this._unbind()},_getTable:function(a){return this._config[a]||(this._unbind(),this._config[a]=[]),this._bind(),this._zangodb.collection(a)},deleteDatabase:function(){return this._unbind(),this.cls.deleteDatabase(this._db)}}},{deleteDatabase:function(a){var c=indexedDB.deleteDatabase(a),d=b.create();return c.onsuccess=function(){d.asyncSuccess(!0)},c.onerror=function(){d.asyncError("Couldn't delete database")},c.onblocked=function(){d.asyncError("Couldn't delete database due to the operation being blocked")},d}})})}).call(Scoped);